// Code generated by mockery v1.0.0. DO NOT EDIT.

package storagemocks

import (
	context "context"

	storage "github.com/gavrilaf/jorel/pkg/scheduler/storage"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// SchedulerStorage is an autogenerated mock type for the SchedulerStorage type
type SchedulerStorage struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *SchedulerStorage) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetLatest provides a mock function with given fields: ctx, olderThan, handler
func (_m *SchedulerStorage) GetLatest(ctx context.Context, olderThan time.Time, handler storage.Handler) (bool, error) {
	ret := _m.Called(ctx, olderThan, handler)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, storage.Handler) bool); ok {
		r0 = rf(ctx, olderThan, handler)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, time.Time, storage.Handler) error); ok {
		r1 = rf(ctx, olderThan, handler)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, scheduledTime, msgType, aggregationID, msg
func (_m *SchedulerStorage) Save(ctx context.Context, scheduledTime time.Time, msgType string, aggregationID string, msg storage.Message) error {
	ret := _m.Called(ctx, scheduledTime, msgType, aggregationID, msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, string, string, storage.Message) error); ok {
		r0 = rf(ctx, scheduledTime, msgType, aggregationID, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
